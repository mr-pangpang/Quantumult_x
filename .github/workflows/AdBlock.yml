name: AdBlock
on:
  schedule:
    - cron: "0 0 * * 1"  # 每周一 UTC 0 点（北京时间 8 点）自动执行
  workflow_dispatch:  # 支持手动触发

jobs:
  download-and-save:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取当前仓库代码
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 安装Playwright及Chrome（指定路径，解决找不到浏览器问题）
        run: |
          # 1. 更新系统依赖 + 安装Python环境
          sudo apt-get update && sudo apt-get install -y python3-pip
          # 2. 安装Playwright（不单独指定chrome，用默认命令安装所有浏览器，确保路径完整）
          pip3 install playwright
          playwright install  # 关键：用默认安装命令，而非"playwright install chrome"，避免路径缺失
          # 3. 打印Chrome安装路径（方便调试，确认文件存在）
          echo "Chrome可执行文件路径：$(find /home/runner/.cache/ms-playwright/ -name headless_shell)"

      - name: 用Playwright模拟浏览器下载AdBlock（指定Chrome路径，确保能启动）
        run: |
          cat > download.py << EOF
          from playwright.sync_api import sync_playwright
          import os
          import glob

          with sync_playwright() as p:
              # 关键修复：自动找到Chrome可执行文件路径（适配GitHub Actions环境）
              chrome_path = glob.glob("/home/runner/.cache/ms-playwright/chromium-*/chrome-linux/headless_shell")[0]
              
              # 启动Chrome时，明确指定可执行文件路径
              browser = p.chromium.launch(
                  headless=True,
                  args=["--no-sandbox"],  # 适配服务器无界面环境
                  executable_path=chrome_path  # 手动指定Chrome路径，解决"找不到文件"错误
              )
              
              # 新建页面并设置User-Agent
              page = browser.new_page(
                  user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
              )
              
              # 监听下载并打开链接
              with page.expect_download() as download_info:
                  page.goto("https://whatshub.top/rule/AntiAD.list")
              download = download_info.value
              download.save_as("AdBlock")  # 保存文件
              browser.close()

              # 验证下载结果
              if not os.path.exists("AdBlock"):
                  raise Exception("文件下载失败！未找到AdBlock文件")
              file_size = os.path.getsize("AdBlock")
              if file_size == 0:
                  raise Exception(f"下载的文件为空！文件大小：{file_size} 字节")
              print(f"下载成功！文件大小：{file_size} 字节（约 {file_size/1024:.2f} KB）")
          EOF
          # 执行下载脚本
          python3 download.py

      - name: 检查dpdisk/quantumult_x仓库是否存在
        id: check_repo
        run: |
          RESPONSE=$(curl -s -w "%{http_code}" -H "Authorization: token ${{ secrets.PANGPANG }}" "https://api.github.com/repos/dpdisk/quantumult_x")
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          echo "repo_exists=$([ "$HTTP_CODE" -eq 200 ] && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - name: 若仓库不存在则创建
        if: steps.check_repo.outputs.repo_exists == 'false'
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PANGPANG }}" -H "Content-Type: application/json" -d '{"name":"quantumult_x","auto_init":false,"visibility":"public"}' "https://api.github.com/user/repos"

      - name: 克隆dpdisk/quantumult_x仓库
        run: |
          git clone -b main --single-branch https://${{ secrets.PANGPANG }}@github.com/dpdisk/quantumult_x.git target-repo || (mkdir -p target-repo && cd target-repo && git init && git remote add origin https://${{ secrets.PANGPANG }}@github.com/dpdisk/quantumult_x.git && git checkout -b main)

      - name: 移动文件到目标仓库根目录
        run: |
          mkdir -p target-repo/filter
          mv AdBlock target-repo/filter/
          echo "文件已移动到：target-repo/filter/AdBlock"

      - name: 提交并推送dpdisk仓库变更
        run: |
          cd target-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add filter/AdBlock
          CURRENT_TIME=$(date -d "+8 hours" +'%Y-%m-%d %H:%M:%S')  # 用北京时间作为提交时间
          git commit -m "updatetime $CURRENT_TIME" || echo "无文件变更，无需提交"
          git push https://${{ secrets.PANGPANG }}@github.com/dpdisk/quantumult_x.git HEAD:main
